{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/clr-modal/sizes/clr-modal-sizes.example.component.ts","./src/app/components/clr-modal/sizes/clr-modal-sizes.example.component.html","./src/app/components/clr-modal/sizes/clr-modal-sizes.example.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/clr-modal/clr-modal.examples.module.ts","./src/app/app.module.ts","./src/app/examples.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\n// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { Component, OnInit } from '@angular/core';\n\nexport enum ModalSize {\n  small = 'sm',\n  medium = 'md',\n  large = 'lg',\n  extraLarge = 'xl',\n}\n\n@Component({\n  selector: 'clr-modal-sizes',\n  templateUrl: './clr-modal-sizes.example.component.html',\n  styleUrls: ['./clr-modal-sizes.example.component.scss'],\n})\nexport class ClrModalSizesExampleComponent implements OnInit {\n  constructor() {}\n\n  modalSize = ModalSize;\n  selectedSize: ModalSize = ModalSize.small;\n  open = false;\n\n  ngOnInit(): void {}\n}\n","<p>\n  <button\n    class=\"btn btn-primary\"\n    (click)=\"selectedSize = modalSize.small; open = true\"\n  >\n    Small modal\n  </button>\n  <button\n    class=\"btn btn-primary\"\n    (click)=\"selectedSize = modalSize.medium; open = true\"\n  >\n    Medium modal\n  </button>\n  <button\n    class=\"btn btn-primary\"\n    (click)=\"selectedSize = modalSize.large; open = true\"\n  >\n    Large modal\n  </button>\n  <button\n    class=\"btn btn-primary\"\n    (click)=\"selectedSize = modalSize.extraLarge; open = true\"\n  >\n    Extra large modal\n  </button>\n</p>\n\n<clr-modal [(clrModalOpen)]=\"open\" [clrModalSize]=\"selectedSize\">\n  <h3 class=\"modal-title\">Modal</h3>\n  <div class=\"modal-body\">I am a {{ selectedSize }} modal.</div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-outline\" (click)=\"open = false\">\n      Cancel\n    </button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"open = false\">\n      Ok\n    </button>\n  </div>\n</clr-modal>\n","/*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClarityModule } from '@clr/angular';\nimport { ClrModalSizesExampleComponent } from './clr-modal-sizes.example.component';\n\n@NgModule({\n  declarations: [ClrModalSizesExampleComponent],\n  imports: [CommonModule, ClarityModule],\n  exports: [ClrModalSizesExampleComponent],\n  entryComponents: [ClrModalSizesExampleComponent],\n})\nexport class ClrModalSizesExampleModule {}\n","/*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Documentation, DocumentationEntry } from '@vmw/ng-live-docs';\n\ninterface SideNavEntries {\n  title: string;\n  path: string;\n}\n\n@Component({\n  selector: 'clr-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  /**\n   * Gets the registered documentation entries {@link Documentation.getAllEntries} and sets them on a array to display\n   * on the side navigation\n   */\n  sideNavEntries: SideNavEntries[] = Documentation.getAllEntries().map(\n    (entry: DocumentationEntry) => ({\n      title: entry.displayName,\n      path: entry.urlSegment,\n    })\n  );\n\n  constructor(router: Router) {\n    /**\n     * Gets the Angular routes to be navigated in the app components's router outlet\n     * Loading the routes in {@link AppRoutingModule} is causing the following error: ERROR in Cannot read property\n     * 'loadChildren' of undefined https://stackoverflow.com/questions/44233195/dynamically-adding-routes-in-angular\n     * TODO: https://jira.eng.vmware.com/browse/VDUCC-72\n     */\n    router.resetConfig([\n      { path: '', redirectTo: 'home', pathMatch: 'full' },\n      ...Documentation.getRoutes(),\n    ]);\n  }\n}\n","<clr-main-container>\n  <clr-header class=\"header-6\">\n    <div class=\"branding\">\n      <a routerLink=\"/\" class=\"nav-nlink\">\n        <clr-icon shape=\"vm-bug\"></clr-icon>\n        <span class=\"title\">Clarity Angular Examples</span>\n      </a>\n    </div>\n    <div class=\"github\">\n      <iframe\n        src=\"https://ghbtns.com/github-btn.html?user=vmware&repo=vmware-cloud-director-ui-components&type=star&count=true\"\n        frameborder=\"0\"\n        scrolling=\"0\"\n        width=\"170\"\n        height=\"30\"\n        title=\"GitHub\"\n      ></iframe>\n    </div>\n  </clr-header>\n\n  <div class=\"content-container\">\n    <nav class=\"sidenav\" [clr-nav-level]=\"2\">\n      <section class=\"sidenav-content\">\n        <section class=\"nav-group\">\n          <label>Components</label>\n          <ul class=\"nav-list\">\n            <li *ngFor=\"let entry of sideNavEntries\">\n              <a\n                class=\"nav-link\"\n                [routerLink]=\"entry.path\"\n                [routerLinkActive]=\"['active']\"\n              >\n                {{ entry.title }}\n              </a>\n            </li>\n          </ul>\n        </section>\n      </section>\n    </nav>\n\n    <main class=\"content-area\">\n      <ng-template vcdTabset=\"[]\"></ng-template>\n      <router-outlet></router-outlet>\n    </main>\n  </div>\n</clr-main-container>\n","/*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClrModal } from '@clr/angular';\nimport { Documentation } from '@vmw/ng-live-docs';\nimport { ClrModalSizesExampleComponent } from './sizes/clr-modal-sizes.example.component';\nimport { ClrModalSizesExampleModule } from './sizes/clr-modal-sizes.example.module';\n\nDocumentation.registerDocumentationEntry({\n  component: ClrModal,\n  displayName: 'ClrModal',\n  urlSegment: 'clrModal',\n  examples: [\n    {\n      component: ClrModalSizesExampleComponent,\n      title: 'Different sizes of Clarity Modal',\n      urlSegment: 'clr-modal-sizes',\n    },\n  ],\n});\n@NgModule({\n  imports: [CommonModule, ClrModalSizesExampleModule],\n})\nexport class ClrModalExamplesModule {}\n","/*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ClarityModule } from '@clr/angular';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ExamplesModule } from './examples.module';\n\nimport {\n  CompodocSchema,\n  NgLiveDocsModule,\n  StackBlitzInfo,\n} from '@vmw/ng-live-docs';\nimport componentsDocumentationJson from '../gen/components-doc.json';\nimport examplesDocumentationJson from '../gen/examples-doc.json';\n\nexport function moduleFinder(componentName: string): string {\n  return componentName.replace('ExampleComponent', 'ExampleModule');\n}\n\n/**\n * The following 2 constants are declared for AOT compilation purpose. Otherwise, the compilation would silently fail and\n * the doc jsons are given as null to the NgLiveDocsModule.\n * NOTE: The following two has to be exported otherwise the AoT compiler won't see it.\n */\nexport const docJson1: CompodocSchema = (componentsDocumentationJson as unknown) as CompodocSchema;\nexport const docJson2: CompodocSchema = (examplesDocumentationJson as unknown) as CompodocSchema;\nexport const sbInfo: StackBlitzInfo = {\n  templateId: 'clarity-angular-examples-starter-template',\n  projectName: 'Clarity Angular Examples',\n  moduleFinder,\n};\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ClarityModule,\n    BrowserAnimationsModule,\n    NgLiveDocsModule.forRoot([docJson1, docJson2], sbInfo),\n    ExamplesModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","/*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClrModalExamplesModule } from './components/clr-modal/clr-modal.examples.module';\n\n@NgModule({\n  imports: [CommonModule, ClrModalExamplesModule],\n})\nexport class ExamplesModule {}\n","/*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","/*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}